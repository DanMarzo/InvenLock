// <auto-generated />
using System;
using InvenLock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvenLock.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230131014500_Funcionario_Equipamentos")]
    partial class FuncionarioEquipamentos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvenLock.Models.Equipamento", b =>
                {
                    b.Property<string>("EquipamentoId")
                        .HasColumnType("varchar(70)");

                    b.Property<DateTime>("DataEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DescEquipamento")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("FuncionarioId")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("FuncionarioRecebedor")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("MarcaEquipamento")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("SituacaoEquip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("TipoEquip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("EquipamentoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Property<string>("FuncionarioId")
                        .HasColumnType("varchar(70)");

                    b.Property<bool?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataAdmissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DataDemissao")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FuncionarioCPF")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<int>("FuncionarioCargo")
                        .HasColumnType("int");

                    b.Property<string>("NomeFuncionario")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("SobreNomeFuncionario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("FuncionarioId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("InvenLock.Models.Equipamento", b =>
                {
                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithMany("Equipamentos")
                        .HasForeignKey("FuncionarioId");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Navigation("Equipamentos");
                });
#pragma warning restore 612, 618
        }
    }
}

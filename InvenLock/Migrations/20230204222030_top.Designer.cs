// <auto-generated />
using System;
using InvenLock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvenLock.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230204222030_top")]
    partial class top
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvenLock.Models.ConsertoEquip", b =>
                {
                    b.Property<int>("ConsertoEquipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsertoEquipId"));

                    b.Property<string>("CodigoInterno")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<string>("EquipamentoId")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Procedimentos")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("SituacaoConserto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ConsertoEquipId");

                    b.HasIndex("EquipamentoId");

                    b.ToTable("ConsertoEquips");
                });

            modelBuilder.Entity("InvenLock.Models.ContatoFuncionario", b =>
                {
                    b.Property<string>("FuncionarioId")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("CPF")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Celular")
                        .HasColumnType("VARCHAR(11)");

                    b.Property<string>("CelularCorp")
                        .HasColumnType("VARCHAR(11)");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(70)");

                    b.Property<string>("EmailCorp")
                        .HasColumnType("VARCHAR(70)");

                    b.HasKey("FuncionarioId");

                    b.ToTable("ContatoFuncionarios");
                });

            modelBuilder.Entity("InvenLock.Models.EnderecoFuncionario", b =>
                {
                    b.Property<string>("FuncionarioId")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Complemento")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FuncionarioCEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeRua")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("FuncionarioId");

                    b.ToTable("EnderecoFuncionarios");
                });

            modelBuilder.Entity("InvenLock.Models.Equipamento", b =>
                {
                    b.Property<string>("EquipamentoId")
                        .HasColumnType("varchar(70)");

                    b.Property<int>("CodigoInterno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoInterno"));

                    b.Property<DateTime?>("DataEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DescEquipamento")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("FuncionarioRecebedor")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("MarcaEquipamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SituacaoEquip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("TipoEquip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("EquipamentoId");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("InvenLock.Models.EquipamentoEmprestimo", b =>
                {
                    b.Property<string>("FuncionarioId")
                        .HasColumnType("varchar(70)");

                    b.Property<int>("CodigoInterno")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEmprestimo")
                        .HasColumnType("datetime2");

                    b.Property<string>("EquipamentoId")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("FuncionariosFuncionarioId")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.HasKey("FuncionarioId");

                    b.HasIndex("EquipamentoId");

                    b.HasIndex("FuncionariosFuncionarioId");

                    b.ToTable("EquipamentoEmprestimos");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Property<string>("FuncionarioId")
                        .HasColumnType("varchar(70)");

                    b.Property<bool?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("DataAdmissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DataDemissao")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("FuncionarioCPF")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<int>("FuncionarioCargo")
                        .HasColumnType("int");

                    b.Property<string>("NomeFuncionario")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<int>("NumOcorrencias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("SobreNomeFuncionario")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("FuncionarioId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.Property<string>("OcorrenciaId")
                        .HasColumnType("varchar(70)");

                    b.Property<int>("CodigoInternoEquipamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFimOcorrencia")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DataOcorrencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DescOcorrencia")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("FuncionarioCPF")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("FuncionarioId")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("MotivoSucata")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("SituacaoConserto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("OcorrenciaId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Ocorrencias");
                });

            modelBuilder.Entity("InvenLock.Models.SucataEquip", b =>
                {
                    b.Property<int>("SucataEquipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SucataEquipId"));

                    b.Property<int>("CodigoInterno")
                        .HasColumnType("int");

                    b.Property<int>("ConsertoEquipId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDescarte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLDATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("MotivoSucata")
                        .HasColumnType("varchar(250)");

                    b.HasKey("SucataEquipId");

                    b.HasIndex("ConsertoEquipId")
                        .IsUnique();

                    b.ToTable("SucataEquips");
                });

            modelBuilder.Entity("InvenLock.Models.ConsertoEquip", b =>
                {
                    b.HasOne("InvenLock.Models.Equipamento", "Equipamento")
                        .WithMany("ConsertoEquips")
                        .HasForeignKey("EquipamentoId");

                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("InvenLock.Models.ContatoFuncionario", b =>
                {
                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithOne("ContatoFuncionario")
                        .HasForeignKey("InvenLock.Models.ContatoFuncionario", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("InvenLock.Models.EnderecoFuncionario", b =>
                {
                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithOne("EnderecoFuncionario")
                        .HasForeignKey("InvenLock.Models.EnderecoFuncionario", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("InvenLock.Models.EquipamentoEmprestimo", b =>
                {
                    b.HasOne("InvenLock.Models.Equipamento", "Equipamento")
                        .WithMany("EquipamentoEmprestimo")
                        .HasForeignKey("EquipamentoId");

                    b.HasOne("InvenLock.Models.Funcionario", "Funcionarios")
                        .WithMany()
                        .HasForeignKey("FuncionariosFuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipamento");

                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("InvenLock.Models.Ocorrencia", b =>
                {
                    b.HasOne("InvenLock.Models.Funcionario", "Funcionario")
                        .WithMany("Ocorrencia")
                        .HasForeignKey("FuncionarioId");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("InvenLock.Models.SucataEquip", b =>
                {
                    b.HasOne("InvenLock.Models.ConsertoEquip", "ConsertoEquip")
                        .WithOne("SucataEquip")
                        .HasForeignKey("InvenLock.Models.SucataEquip", "ConsertoEquipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsertoEquip");
                });

            modelBuilder.Entity("InvenLock.Models.ConsertoEquip", b =>
                {
                    b.Navigation("SucataEquip");
                });

            modelBuilder.Entity("InvenLock.Models.Equipamento", b =>
                {
                    b.Navigation("ConsertoEquips");

                    b.Navigation("EquipamentoEmprestimo");
                });

            modelBuilder.Entity("InvenLock.Models.Funcionario", b =>
                {
                    b.Navigation("ContatoFuncionario");

                    b.Navigation("EnderecoFuncionario");

                    b.Navigation("Ocorrencia");
                });
#pragma warning restore 612, 618
        }
    }
}
